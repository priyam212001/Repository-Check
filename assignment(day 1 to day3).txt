ASSIGNMENT 1:
  CASE STUDY1:
    QUERY1- select * from assignment where category='non-veg';
    QUERY2- select * from assignment where value>150;
    QUERY3- select category,count(*) as total from assignment group by category;

 CASE STUDY2:
    QUERY1- select * from employees where name!=null;
    QUERY2- select * from employees where deptname='HR';
    QUERY3- select * from employees where order by salary desc;
    QUERY4- select * from employees where gender='female';
    QUERY5- select * from employees where order by name desc;

CASE STUDY3:
    QUERY1- create table player(name int,match int,favorite_score int,location varchar(30),year varchar(30),partnership_score int);
    
CASE STUDY4:
    QUERY1- select sum(amount) as total from case_study4 where date>'2015-09-01 00:00:00';
    
CASE STUDY5:
    QUERY1- SELECT * FROM CUSTOMER WHERE STATE='NY' OR STATE='CA;
    QUERY2- SELECT STATE, COUNT(*) AS TOTAL FROM CUSTOMER GROUP BY STATE;
    QUERY3- UPDATE CUSTOMER SET PHONE= '1234567891' WHERE PHONE='NULL';
    QUERY4- SELECT * FROM CUSTOMER ORDER BY FIRST_NAME DESC,LAST_NAME DESC;

ASSIGNMENT 2:

CASE STUDY1:
  QUERY1- select DISTINCT cust_name as cust_name,cust_address, cust_phone from mobile_seller;
  QUERY2- select cust_name,cust_address from mobile_seller group by cust_name,cust_address having count(*)>1;

CASE STUDY2:
  QUERY1- select * from case_study2;
  QUERY2- SELECT * FROM case_study2 where price=(select max(price) from case_study2);
  QUERY3- select * from case_study2;

CASE STUDY3:
 QUERY1- select department_name from departments left join employees on departments.department_id=employees.employee_id;
 QUERY2- SELECT department_id, COUNT(*) AS number FROM employees GROUP BY department_id;


CASE_STUDY4:
   create user test@localhost identified by '12345';
   GRANT SELECT ON * . * TO test@localhost;
   create user admin@localhost identified by '12345';
   GRANT all privileges ON * . * TO admin@localhost;

CASE STUDY5:
  QUERY1- SELECT id, name, class,mark,RANK() OVER(ORDER BY mark DESC) as 'Rank', gender from case_study5;
  QUERY2- SELECT * FROM case_study5 WHERE gender='female';
  QUERY3- SELECT * FROM case_study5 WHERE gender='male';
  QUERY4- select count(*) as total from case_study5;
  QUERY5- select class,count(*) as total from case_study5 group by class;
 

ASSIGNMENT3:

 CASE STUDY1:
  QUERY1- select e.ename,d.dname,e.job,e.sal from employee as e inner join department as d on e.deptno=d.deptno;
  QUERY2- create view test as select e.ename,e.job,e.sal from employee as e;
 
 CASE STUDY2:
  QUERY1- delimiter //
create trigger before_update
before update
on case_study2 for each row
begin
if new.quantity>old.quantity*2 then
signal sqlstate '45000'
set message_text='new quantity cannot be greater than 2 time to old quantity.';
end if;
end //
 
CASE STUDY3:
  


CASE STUDY4:
   delimiter //
create trigger before_insert
before insert
on case_study4 for each row
begin
if case_study4.indexspaceused> 24 then
signal sqlstate '45000'
set message_text='it cannot exceed 24';
end if;
end //

